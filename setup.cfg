[metadata]
description-file = README.md
license_file = LICENSE

[coverage:run]
source = app
omit =
    */tests/*
    */__init__.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    # Don't complain about abstract methods
    @(abc\.)?abstractmethod
    # Don't complain about type checking
    if TYPE_CHECKING:
    # Don't complain about test helpers
    def assert.*:
    def check.*:
    def make_.*:
    def test_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*:
    def _test_.*:
    def _check_.*:
    def _make_.*:
    def _assert_.*
